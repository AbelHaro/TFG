import pandas as pd
import matplotlib.pyplot as plt

# Datos proporcionados
data = {
    "epoca": list(range(1, 31)),
    "train_class_loss_n": [
        3.72515, 2.32346, 1.58284, 1.21941, 1.06977, 0.97611, 0.91503, 0.88924, 0.81348, 0.79969,
        0.77005, 0.73524, 0.71339, 0.7002, 0.67821, 0.66855, 0.6755, 0.65388, 0.63263, 0.63206,
        0.66553, 0.63778, 0.63395, 0.62342, 0.61136, 0.61928, 0.59454, 0.59155, 0.59118, 0.57388
    ],
    "val_class_loss_n": [
        4.02098, 3.56685, 2.64928, 1.77694, 1.05071, 0.86603, 0.77815, 0.77107, 0.69381, 0.675,
        0.62863, 0.6071, 0.61881, 0.61294, 0.63675, 0.59057, 0.58118, 0.54938, 0.55715, 0.54541,
        0.55656, 0.53499, 0.5328, 0.51766, 0.51046, 0.54712, 0.49965, 0.50743, 0.50421, 0.49951
    ],
    "train_class_loss_s": [
        2.56769, 1.00387, 0.79152, 0.6696, 0.60304, 0.57069, 0.5428, 0.52601, 0.50661, 0.49946,
        0.48646, 0.47504, 0.44566, 0.44588, 0.43325, 0.44088, 0.43309, 0.41863, 0.41738, 0.41373,
        0.4021, 0.38861, 0.38718, 0.38169, 0.36717, 0.37682, 0.35712, 0.35339, 0.35124, 0.34058
    ],
    "val_class_loss_s": [
        1.60948, 1.00332, 0.69771, 0.56738, 0.53698, 0.502, 0.49591, 0.4597, 0.47178, 0.45923,
        0.46074, 0.4277, 0.42307, 0.41015, 0.43546, 0.41523, 0.42337, 0.41773, 0.40458, 0.40564,
        0.39574, 0.39776, 0.40425, 0.39487, 0.38609, 0.38055, 0.37453, 0.36895, 0.36943, 0.36846
    ],
    "train_class_loss_m": [
        2.37937, 0.84744, 0.69585, 0.59665, 0.55171, 0.51871, 0.52157, 0.51256, 0.48243, 0.47241,
        0.47465, 0.45362, 0.42123, 0.433, 0.41836, 0.4159, 0.42245, 0.40814, 0.39724, 0.39519,
        0.38007, 0.37077, 0.36865, 0.37342, 0.35706, 0.35186, 0.34335, 0.33966, 0.3358, 0.31995
    ],
    "val_class_loss_m": [
        1.92884, 1.26487, 0.7472, 0.62707, 0.53935, 0.49783, 0.49573, 0.46537, 0.45398, 0.48088,
        0.47612, 0.41192, 0.4155, 0.42993, 0.4323, 0.4204, 0.39941, 0.40526, 0.39913, 0.38959,
        0.39092, 0.38752, 0.39182, 0.38794, 0.37202, 0.37511, 0.37292, 0.36543, 0.36148, 0.36092
    ],
    "train_class_loss_l": [
        2.19883, 0.86299, 0.68504, 0.62843, 0.57196, 0.54348, 0.51798, 0.5084, 0.47395, 0.47842,
        0.45537, 0.45867, 0.4295, 0.43381, 0.42904, 0.41994, 0.42407, 0.40515, 0.39679, 0.3895,
        0.37938, 0.37711, 0.37359, 0.3631, 0.35595, 0.35709, 0.34058, 0.33686, 0.33483, 0.31885
    ],
    "val_class_loss_l": [
        1.61051, 0.86214, 0.61014, 0.6023, 0.61633, 0.51779, 0.50417, 0.47611, 0.46191, 0.43868,
        0.44058, 0.42609, 0.41644, 0.41737, 0.41376, 0.39781, 0.40631, 0.39664, 0.38682, 0.39035,
        0.39674, 0.39819, 0.38244, 0.37255, 0.3745, 0.36865, 0.36693, 0.35812, 0.34869, 0.34424
    ],
}

# Crear el DataFrame
df = pd.DataFrame(data)

# Configurar la figura y los ejes
fig, axs = plt.subplots(2, 2, figsize=(14, 10))
fig.suptitle("Training y Validation Class Loss por tamaño de objeto", fontsize=16)

# Listas de columnas y títulos
tamaños = ["n", "s", "m", "l"]
axes = axs.ravel()

for i, size in enumerate(tamaños):
    ax = axes[i]
    ax.plot(df["epoca"], df[f"train_class_loss_{size}"], label="Train", marker='o')
    ax.plot(df["epoca"], df[f"val_class_loss_{size}"], label="Validation", marker='x')
    ax.set_title(f"Tamaño {size.upper()}")
    ax.set_xlabel("Época")
    ax.set_ylabel("Loss")
    ax.legend()
    ax.grid(True)

plt.tight_layout(rect=[0, 0.03, 1, 0.95])
plt.show()
